<?php

/**
 * BaseAPSwIf
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $ID
 * @property integer $AP
 * @property string $interface
 * @property string $masterInterface
 * @property enum $type
 * @property boolean $isNet
 * @property string $bssid
 * @property string $essid
 * @property integer $frequency
 * @property boolean $enabled
 * @property enum $encType
 * @property string $encKey
 * @property integer $tarifFlag
 * @property AP $AP
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseAPSwIf extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('APSwIf');
        $this->hasColumn('ID', 'integer', 11, array(
             'primary' => true,
             'type' => 'integer',
             'autoincrement' => true,
             'length' => '11',
             ));
        $this->hasColumn('AP', 'integer', 11, array(
             'type' => 'integer',
             'length' => '11',
             ));
        $this->hasColumn('interface', 'string', 50, array(
             'type' => 'string',
             'notnull' => true,
             'length' => '50',
             ));
        $this->hasColumn('masterInterface', 'string', 50, array(
             'type' => 'string',
             'length' => '50',
             ));
        $this->hasColumn('type', 'enum', null, array(
             'type' => 'enum',
             'values' => 
             array(
              0 => 'wifi',
              1 => 'ether',
              2 => 'vlan',
              3 => 'virtual-ap',
              4 => 'bridge',
              5 => 'other',
             ),
             ));
        $this->hasColumn('isNet', 'boolean', null, array(
             'default' => false,
             'type' => 'boolean',
             'notnull' => true,
             ));
        $this->hasColumn('bssid', 'string', 20, array(
             'type' => 'string',
             'length' => '20',
             ));
        $this->hasColumn('essid', 'string', 30, array(
             'type' => 'string',
             'length' => '30',
             ));
        $this->hasColumn('frequency', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             ));
        $this->hasColumn('enabled', 'boolean', null, array(
             'default' => true,
             'type' => 'boolean',
             'notnull' => true,
             ));
        $this->hasColumn('encType', 'enum', null, array(
             'type' => 'enum',
             'values' => 
             array(
              0 => 'none',
              1 => 'wep',
              2 => 'wpa',
             ),
             ));
        $this->hasColumn('encKey', 'string', 50, array(
             'type' => 'string',
             'length' => '50',
             ));
        $this->hasColumn('tarifFlag', 'integer', 11, array(
             'default' => 1,
             'type' => 'integer',
             'notnull' => true,
             'length' => '11',
             ));


        $this->index('IX_APswif_APif', array(
             'fields' => 
             array(
              0 => 'AP',
              1 => 'interface',
             ),
             'type' => 'unique',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('AP', array(
             'local' => 'AP',
             'foreign' => 'ID'));
    }
}
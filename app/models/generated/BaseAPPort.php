<?php

/**
 * BaseAPPort
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $ID
 * @property integer $AP
 * @property string $port
 * @property enum $typ
 * @property integer $PorCis
 * @property integer $odbernaAdresa
 * @property string $cisloVchodu
 * @property string $cisloBytu
 * @property integer $connectedTo
 * @property string $connectedInterface
 * @property string $connectedPort
 * @property boolean $isUplink
 * @property string $popis
 * @property AP $AP
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseAPPort extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('APPort');
        $this->hasColumn('ID', 'integer', 11, array(
             'primary' => true,
             'type' => 'integer',
             'autoincrement' => true,
             'length' => '11',
             ));
        $this->hasColumn('AP', 'integer', 11, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => '11',
             ));
        $this->hasColumn('port', 'string', 50, array(
             'type' => 'string',
             'notnull' => true,
             'length' => '50',
             ));
        $this->hasColumn('typ', 'enum', null, array(
             'type' => 'enum',
             'notnull' => true,
             'values' => 
             array(
              0 => 'empty',
              1 => 'zak-inet',
              2 => 'zak-tv',
              3 => 'zak-voip',
              4 => 'zak-reserved',
              5 => 'reserved',
              6 => 'disabled',
              7 => 'switch',
              8 => 'ap',
              9 => 'other',
             ),
             ));
        $this->hasColumn('PorCis', 'integer', 11, array(
             'type' => 'integer',
             'length' => '11',
             ));
        $this->hasColumn('odbernaAdresa', 'integer', 11, array(
             'type' => 'integer',
             'length' => '11',
             ));
        $this->hasColumn('cisloVchodu', 'string', 20, array(
             'type' => 'string',
             'length' => '20',
             ));
        $this->hasColumn('cisloBytu', 'string', 20, array(
             'type' => 'string',
             'length' => '20',
             ));
        $this->hasColumn('connectedTo', 'integer', 11, array(
             'type' => 'integer',
             'length' => '11',
             ));
        $this->hasColumn('connectedInterface', 'string', 50, array(
             'type' => 'string',
             'length' => '50',
             ));
        $this->hasColumn('connectedPort', 'string', 50, array(
             'type' => 'string',
             'length' => '50',
             ));
        $this->hasColumn('isUplink', 'boolean', null, array(
             'default' => false,
             'type' => 'boolean',
             'notnull' => true,
             ));
        $this->hasColumn('popis', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('AP', array(
             'local' => 'AP',
             'foreign' => 'ID'));
    }
}
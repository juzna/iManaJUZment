<?php

/**
 * BaseZakaznik
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $PorCis
 * @property integer $cisloSmlouvy
 * @property string $heslo
 * @property date $aktivniOd
 * @property boolean $accepted
 * @property integer $acceptedUser
 * @property timestamp $acceptedTime
 * @property date $predplaceno
 * @property boolean $aktivni
 * @property integer $staryDluh
 * @property boolean $nepocitatPredplatne
 * @property string $nepocitatPredplatneDuvod
 * @property float $instalacniPoplatek
 * @property integer $doporucitel
 * @property date $sepsaniSmlouvy
 * @property integer $neplaticSkupina
 * @property integer $neplaticTolerance
 * @property date $neplaticNeresitDo
 * @property integer $vychoziAdresa
 * @property ZakaznikAdresa $ZakaznikAdresa
 * @property Doctrine_Collection $ZakaznikIP
 * @property Doctrine_Collection $ZakaznikKontakt
 * @property Doctrine_Collection $ZakaznikNeaktivni
 * @property Doctrine_Collection $ZakaznikTarif
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseZakaznik extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('Zakaznik');
        $this->hasColumn('PorCis', 'integer', 11, array(
             'primary' => true,
             'type' => 'integer',
             'length' => '11',
             ));
        $this->hasColumn('cisloSmlouvy', 'integer', 11, array(
             'unique' => true,
             'type' => 'integer',
             'length' => '11',
             ));
        $this->hasColumn('heslo', 'string', 50, array(
             'type' => 'string',
             'length' => '50',
             ));
        $this->hasColumn('aktivniOd', 'date', null, array(
             'type' => 'date',
             ));
        $this->hasColumn('accepted', 'boolean', null, array(
             'default' => false,
             'type' => 'boolean',
             'notnull' => true,
             ));
        $this->hasColumn('acceptedUser', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('acceptedTime', 'timestamp', null, array(
             'type' => 'timestamp',
             ));
        $this->hasColumn('predplaceno', 'date', null, array(
             'type' => 'date',
             ));
        $this->hasColumn('aktivni', 'boolean', null, array(
             'default' => true,
             'type' => 'boolean',
             ));
        $this->hasColumn('staryDluh', 'integer', null, array(
             'default' => 0,
             'type' => 'integer',
             ));
        $this->hasColumn('nepocitatPredplatne', 'boolean', null, array(
             'default' => false,
             'type' => 'boolean',
             'notnull' => true,
             ));
        $this->hasColumn('nepocitatPredplatneDuvod', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));
        $this->hasColumn('instalacniPoplatek', 'float', null, array(
             'type' => 'float',
             ));
        $this->hasColumn('doporucitel', 'integer', 11, array(
             'type' => 'integer',
             'length' => '11',
             ));
        $this->hasColumn('sepsaniSmlouvy', 'date', null, array(
             'type' => 'date',
             ));
        $this->hasColumn('neplaticSkupina', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('neplaticTolerance', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('neplaticNeresitDo', 'date', null, array(
             'type' => 'date',
             ));
        $this->hasColumn('vychoziAdresa', 'integer', 11, array(
             'type' => 'integer',
             'length' => '11',
             ));


        $this->index('cisloSmlouvy', array(
             'fields' => 
             array(
              0 => 'cisloSmlouvy',
             ),
             'type' => 'unique',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('ZakaznikAdresa', array(
             'local' => 'vychoziAdresa',
             'foreign' => 'ID'));

        $this->hasMany('ZakaznikIP', array(
             'local' => 'PorCis',
             'foreign' => 'PorCis'));

        $this->hasMany('ZakaznikKontakt', array(
             'local' => 'PorCis',
             'foreign' => 'PorCis'));

        $this->hasMany('ZakaznikNeaktivni', array(
             'local' => 'PorCis',
             'foreign' => 'PorCis'));

        $this->hasMany('ZakaznikTarif', array(
             'local' => 'PorCis',
             'foreign' => 'PorCis'));

        $geographical0 = new Doctrine_Template_Geographical();
        $softdelete0 = new Doctrine_Template_SoftDelete();
        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($geographical0);
        $this->actAs($softdelete0);
        $this->actAs($timestampable0);
    }
}
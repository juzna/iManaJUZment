<?php
namespace Thrift\APos;
/**
 * Autogenerated by Thrift
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 */
include_once $GLOBALS['THRIFT_ROOT'].'/Thrift.php';

include_once $GLOBALS['THRIFT_ROOT'].'/packages/apos/apos_types.php';

class APIResult extends \TBase {
  static $_TSPEC;

  public $lst = null;
  public $ret = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'lst',
          'name' => '',
          'type' => \TType::LST,
          'etype' => \TType::MAP,
          'elem' => array(
            'name' => '',
            'type' => \TType::MAP,
            'ktype' => \TType::STRING,
            'vtype' => \TType::STRING,
            'key' => array(
              'name' => 'string',
              'type' => \TType::STRING,
            ),
            'val' => array(
              'name' => 'string',
              'type' => \TType::STRING,
              ),
            ),
          ),
        2 => array(
          'var' => 'ret',
          'name' => 'string',
          'type' => \TType::STRING,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'APIResult';
  }

  public function read($input)
  {
    return $this->_read('APIResult', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('APIResult', self::$_TSPEC, $output);
  }
}

class APICommand extends \TBase {
  static $_TSPEC;

  public $path = null;
  public $command = null;
  public $params = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'path',
          'name' => 'string',
          'type' => \TType::STRING,
          ),
        2 => array(
          'var' => 'command',
          'name' => 'string',
          'type' => \TType::STRING,
          ),
        3 => array(
          'var' => 'params',
          'name' => '',
          'type' => \TType::MAP,
          'ktype' => \TType::STRING,
          'vtype' => \TType::STRING,
          'key' => array(
            'name' => 'string',
            'type' => \TType::STRING,
          ),
          'val' => array(
            'name' => 'string',
            'type' => \TType::STRING,
            ),
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'APICommand';
  }

  public function read($input)
  {
    return $this->_read('APICommand', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('APICommand', self::$_TSPEC, $output);
  }
}

?>

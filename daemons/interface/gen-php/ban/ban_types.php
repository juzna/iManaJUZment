<?php
namespace Thrift;
/**
 * Autogenerated by Thrift
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 */
include_once $GLOBALS['THRIFT_ROOT'].'/Thrift.php';

include_once $GLOBALS['THRIFT_ROOT'].'/packages/common/common_types.php';

$GLOBALS['\Thrift\E_BlockType'] = array(
  'permament' => 1,
  'soft' => 2,
);

final class BlockType {
  const permament = 1;
  const soft = 2;
  static public $__names = array(
    1 => 'permament',
    2 => 'soft',
  );
}

class BlockUser extends \TBase {
  static $_TSPEC;

  public $ip = null;
  public $mac = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'ip',
          'name' => 'string',
          'type' => \TType::STRING,
          ),
        2 => array(
          'var' => 'mac',
          'name' => 'string',
          'type' => \TType::STRING,
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'BlockUser';
  }

  public function read($input)
  {
    return $this->_read('BlockUser', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('BlockUser', self::$_TSPEC, $output);
  }
}

class BanEntry extends \TBase {
  static $_TSPEC;

  public $ap = null;
  public $user = null;
  public $type = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'ap',
          'name' => 'i32',
          'type' => \TType::I32,
          ),
        2 => array(
          'var' => 'user',
          'name' => '\Thrift\BlockUser',
          'type' => \TType::STRUCT,
          'class' => '\Thrift\BlockUser',
          ),
        3 => array(
          'var' => 'type',
          'name' => '\Thrift\BlockType',
          'type' => \TType::ENUM,
          'enum' => '\Thrift\E_BlockType',
          ),
        );
    }
    if (is_array($vals)) {
      parent::__construct(self::$_TSPEC, $vals);
    }
  }

  public function getName() {
    return 'BanEntry';
  }

  public function read($input)
  {
    return $this->_read('BanEntry', self::$_TSPEC, $input);
  }
  public function write($output) {
    return $this->_write('BanEntry', self::$_TSPEC, $output);
  }
}

?>
